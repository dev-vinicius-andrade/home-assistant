blueprint:
  name: !input title
  description: !input description
  domain: automation
  source_url: https://github.com/dev-vinicius-andrade/home-assistant/blob/main/config/blueprints/automation/dev-vinicius-andrade/virtual_multi_way_switch_i18n.yaml
  input:
    title:
      name: Name
      description: The name of this automation
      default: Virtual Multi-Way Switch
      selector:
        text:
    description:
      name: Description
      description: Description of this automation
      default: >-
        Creates a virtual multi-way switch configuration (3-way, 4-way, 5-way, etc.) where multiple 
        switches/lights can control each other. When any switch changes state, all others will match that state.
      selector:
        text:
    group_entities:
      name: !input group_entities.name
      description: !input group_entities.description
      selector:
        entity:
          domain:
            - switch
            - light
            - input_boolean
          multiple: true
    exclude_from_sync:
      name: !input exclude_from_sync.name
      description: !input exclude_from_sync.description
      default: []
      selector:
        entity:
          domain:
            - switch
            - light
            - input_boolean
          multiple: true
    delay_seconds:
      name: !input delay_seconds.name
      description: !input delay_seconds.description
      default: 1
      selector:
        number:
          min: 0
          max: 5
          step: 0.1
          unit_of_measurement: seconds

trigger:
  platform: state
  entity_id: !input group_entities
  to:
    - "on" 
    - "off"

variables:
  group_entities: !input group_entities
  exclude_from_sync: !input exclude_from_sync
  triggering_entity: "{{ trigger.entity_id }}"
  target_state: "{{ trigger.to_state.state }}"
  # Create a filtered list of entities to update (all except the triggering one and any excluded ones)
  entities_to_update: >-
    {% set to_update = [] %}
    {% for entity in group_entities %}
      {% if entity != triggering_entity and entity not in exclude_from_sync %}
        {% set to_update = to_update + [entity] %}
      {% endif %}
    {% endfor %}
    {{ to_update }}

action:
  # Only proceed if there are entities to update
  - condition: template
    value_template: "{{ entities_to_update|count > 0 }}"
  
  # Turn all other entities to match the state of the triggering entity
  - service: >
      {% if target_state == "on" %}
        homeassistant.turn_on
      {% elif target_state == "off" %}
        homeassistant.turn_off
      {% endif %}
    target:
      entity_id: "{{ entities_to_update }}"

  # Add a small delay to prevent rapid-fire toggling
  - delay:
      seconds: !input delay_seconds

mode: single
max_exceeded: silent
